#Define pipeline stages
stages:
    - install
    - build
    - test
    - deploy

#Install Dependencies
install-dependencies:
    stage: install
    image: node:20
    script:
        - echo "Installing backend dependencies..."
        - cd WagInn-Backend && npm install
        - echo "Installing frontend dependencies..."
        - cd ../WagInn-Project && npm install
    cache:
        paths:
        - WagInn_Backend/node_modules/
        - WagInn_Project/node_modules/

# Build frontend
build-frontend:
  stage: build
  image: node:20
  script:
    - cd WagInn-Project
    # Clean install to ensure consistent state
    - rm -rf node_modules package-lock.json
    - npm install #install Angular CLI locally too
    # - npm audit fix --force
     # Verify environment files exist
    - test -f src/environments/environment.ts || (echo "Environment file missing!" && exit 1)
    - test -f src/environments/environment.prod.ts || (echo "Production environment file missing!" && exit 1)
     # Build with verbose output for debugging
    - npx ng build --verbose
  artifacts:
    paths:
      - WagInn-Project/dist/

# Run backend + frontend tests
run-tests:
  stage: test
  image: node:20
  script:
    - cd WagInn-Backend && npm test || echo "No backend tests found"
    - cd ../WagInn-Project && npm test || echo "No frontend tests found"

# Deploy to Heroku (only on main branch)
deploy-to-heroku:
  stage: deploy
  image: node:20
  script:
    - echo "Deploying to Heroku..."
    - curl https://cli-assets.heroku.com/install.sh | sh
    - echo "$HEROKU_API_KEY" | heroku auth:token
    - heroku git:remote -a $HEROKU_APP_NAME
    - git push heroku main
  only:
    - master    #Deploys only when pushed to master